#!/bin/env python
# -*- coding: utf-8 -*-

DOCUMENTATION = '''
---
module: upyun_facts
version_added: "beta"
short_description: get upyun facts
description:
    - get upyun related upyuns
options:
  filter:
    description:
      - match the variable name
    required: False
    default: all
    aliases: []
author: Xiangjun Zhang
'''

EXAMPLES = '''
get infomation of container named example

- hosts: upyun_host
  tasks:
  upyun_facts: filter=example
'''
 
import re
import os
import subprocess


class UpYunFacter:
    def __init__(self, module):
        self.module = module
        self.name = self.module.params.get('filter')

    def all_var(self, filter):
        command = ['bash', '-c', 'set -a && source /etc/upyun.cfg && env']
        proc = subprocess.Popen(command, stdout = subprocess.PIPE)
        for line in proc.stdout:
            if '=' in line:
                (key, _, value) = line.partition("=")
                if re.match(r'.*%s.*' % filter, key):
                    os.environ[key] = value
        proc.communicate()
        return dict(os.environ)

def main():
    module = AnsibleModule(
        argument_spec = dict(
            filter = dict(default=''), 
        )
    )

    try:
        facter = UpYunFacter(module)
        filter = module.params.get('filter')
        facts = facter.all_var(filter)
        module.exit_json(changed=False, ansible_facts=facts)

    except Exception, e:
        module.fail_json(changed=False, msg=repr(e))

# import module snippets
from ansible.module_utils.basic import *
main()
